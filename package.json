{
  "name": "kusto-server",
  "version": "0.1.34",
  "description": "Express based custom server for simple backend service",
  "main": "index.js",
  "bin": {
    "kusto-db": "./kusto-db.js"
  },
  "scripts": {
    "start": "ts-node ./src/index.ts",
    "dev": "nodemon",
    "dev:serve": "nodemon --config nodemon.serve.json",
    "build": "npm run db -- generate --all && npm run generate-injectables && npm run generate-repositories && npm run generate-db-types && npm run generate-routes-map && npm run build-routes && webpack --mode production && npm run clean:tmp",
    "build:dev": "npm run generate-injectables && npm run generate-repositories && npm run generate-db-types && npm run generate-routes-map && npm run build-routes && webpack --mode development && npm run clean:tmp",
    "build-routes": "node src/core/scripts/build-routes.js",
    "generate-routes-map": "node src/core/scripts/generate-routes-map.js",
    "generate-db-types": "node src/core/scripts/generate-db-types.js",
    "generate-injectables": "node src/core/scripts/generate-injectable-types.js",
    "generate-repositories": "node src/core/scripts/generate-repository-types.js",
    "clean:tmp": "node -e \"const fs = require('fs'); const path = require('path'); const tmpDir = path.join(__dirname, 'src', 'core', 'tmp'); if (fs.existsSync(tmpDir)) { fs.rmSync(tmpDir, { recursive: true, force: true }); console.log('ðŸ§¹ Cleaned tmp directory'); }\"",
    "serve": "node dist/server.js",
    "db": "ts-node ./src/core/scripts/kusto-db-cli.ts",
    "test:serverless-db": "ts-node ./examples/serverless-db-test.ts",
    "updater:generate": "ts-node ./updater/generate.ts",
    "updater:check": "ts-node ./updater/compare.ts",
    "updater:update": "ts-node ./updater/update.ts",
    "install-cli": "tsc -p src/core/scripts/tsconfig.cli.json && npm install . && npm link",
    "uninstall-cli": "npm uninstall -g kusto-server"
  },
  "author": "rkdmf0000@gmail.com",
  "license": "ISC",
  "dependencies": {
    "@prisma/client": "^6.11.0",
    "@types/archiver": "^6.0.3",
    "@types/bcrypt": "^5.0.2",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/yauzl": "^2.10.3",
    "archiver": "^7.0.1",
    "bcrypt": "^6.0.0",
    "body-parser": "^1.20.3",
    "commander": "^14.0.0",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "ejs": "^3.1.10",
    "express": "^4.18.3",
    "helmet": "^8.0.0",
    "html-to-image": "^1.11.11",
    "http-proxy-middleware": "^2.0.6",
    "jsonwebtoken": "^9.0.2",
    "module-alias": "^2.2.3",
    "multer": "^1.4.5-lts.1",
    "winston": "^3.12.0",
    "winston-daily-rotate-file": "^5.0.0",
    "yauzl": "^3.2.0"
  },
  "devDependencies": {
    "@babel/core": "^7.27.1",
    "@babel/preset-env": "^7.27.2",
    "@types/cookie-parser": "^1.4.7",
    "@types/cors": "^2.8.17",
    "@types/ejs": "^3.1.5",
    "@types/express": "^4.17.21",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.11.28",
    "babel-loader": "^10.0.0",
    "copy-webpack-plugin": "^12.0.2",
    "dotenv-cli": "^8.0.0",
    "html-inline-script-webpack-plugin": "^3.2.1",
    "html-webpack-plugin": "^5.6.3",
    "nodemon": "^3.1.0",
    "prisma": "^6.11.0",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "webpack": "^5.99.9",
    "webpack-cli": "^5.1.4",
    "webpack-node-externals": "^3.0.0"
  },
  "_moduleAliases": {
    "@": "./",
    "@app": "./src/app",
    "@core": "./src/core",
    "@lib": "./src/core/lib",
    "@ext": "./src/core/external",
    "@db": "./src/app/db"
  }
}
