/**
 * 애플리케이션 전역 에러 코드 상수 정의
 * 모든 에러 코드를 중앙에서 관리하여 일관성과 유지보수성을 확보
 */

/**
 * JSON:API 에러 코드
 */
export const JSON_API_ERROR_CODES = {
  // 페이지네이션 관련
  PAGINATION_REQUIRED: 'PAGINATION_REQUIRED',
  INVALID_PAGINATION_PARAMS: 'INVALID_PAGINATION_PARAMS',
  INVALID_PAGE_SIZE: 'INVALID_PAGE_SIZE',
  
  // 요청 검증 관련
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  INVALID_REQUEST_FORMAT: 'INVALID_REQUEST_FORMAT',
  MISSING_REQUIRED_FIELD: 'MISSING_REQUIRED_FIELD',
  INVALID_FIELD_TYPE: 'INVALID_FIELD_TYPE',
  
  // 리소스 관련
  RESOURCE_NOT_FOUND: 'RESOURCE_NOT_FOUND',
  RESOURCE_ALREADY_EXISTS: 'RESOURCE_ALREADY_EXISTS',
  INVALID_RESOURCE_TYPE: 'INVALID_RESOURCE_TYPE',
  INVALID_RESOURCE_ID: 'INVALID_RESOURCE_ID',
  
  // 관계 관련
  RELATIONSHIP_NOT_FOUND: 'RELATIONSHIP_NOT_FOUND',
  INVALID_RELATIONSHIP: 'INVALID_RELATIONSHIP',
  RELATIONSHIP_VIOLATION: 'RELATIONSHIP_VIOLATION',
  
  // 인증/권한 관련
  UNAUTHORIZED: 'UNAUTHORIZED',
  FORBIDDEN: 'FORBIDDEN',
  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',
  TOKEN_EXPIRED: 'TOKEN_EXPIRED',
  
  // Content-Type 관련
  UNSUPPORTED_MEDIA_TYPE: 'UNSUPPORTED_MEDIA_TYPE',
  INVALID_CONTENT_TYPE: 'INVALID_CONTENT_TYPE',
  
  // 서버 에러
  INTERNAL_ERROR: 'INTERNAL_ERROR',
  DATABASE_ERROR: 'DATABASE_ERROR',
  OPERATION_FAILED: 'OPERATION_FAILED'
} as const;

/**
 * CRUD 연산 에러 코드
 */
export const CRUD_ERROR_CODES = {
  // 생성 관련
  CREATE_FAILED: 'CREATE_FAILED',
  DUPLICATE_ENTRY: 'DUPLICATE_ENTRY',
  INVALID_CREATE_DATA: 'INVALID_CREATE_DATA',
  
  // 조회 관련
  READ_FAILED: 'READ_FAILED',
  INVALID_QUERY_PARAMS: 'INVALID_QUERY_PARAMS',
  INVALID_FILTER: 'INVALID_FILTER',
  INVALID_SORT: 'INVALID_SORT',
  
  // 수정 관련
  UPDATE_FAILED: 'UPDATE_FAILED',
  INVALID_UPDATE_DATA: 'INVALID_UPDATE_DATA',
  RECORD_NOT_FOUND: 'RECORD_NOT_FOUND',
  OPTIMISTIC_LOCK_FAILED: 'OPTIMISTIC_LOCK_FAILED',
  
  // 삭제 관련
  DELETE_FAILED: 'DELETE_FAILED',
  SOFT_DELETE_FAILED: 'SOFT_DELETE_FAILED',
  HARD_DELETE_FAILED: 'HARD_DELETE_FAILED',
  DELETE_CONSTRAINT_VIOLATION: 'DELETE_CONSTRAINT_VIOLATION',
  
  // 복구 관련
  RECOVER_FAILED: 'RECOVER_FAILED',
  RECORD_NOT_DELETED: 'RECORD_NOT_DELETED',
  ALREADY_RECOVERED: 'ALREADY_RECOVERED'
} as const;

/**
 * Prisma 에러 코드 매핑
 */
export const PRISMA_ERROR_CODES = {
  // 제약 조건 위반
  UNIQUE_CONSTRAINT_VIOLATION: 'UNIQUE_CONSTRAINT_VIOLATION',
  FOREIGN_KEY_CONSTRAINT_VIOLATION: 'FOREIGN_KEY_CONSTRAINT_VIOLATION',
  NULL_CONSTRAINT_VIOLATION: 'NULL_CONSTRAINT_VIOLATION',
  CONSTRAINT_VIOLATION: 'CONSTRAINT_VIOLATION',
  
  // 데이터 검증
  INVALID_VALUE: 'INVALID_VALUE',
  DATA_VALIDATION_ERROR: 'DATA_VALIDATION_ERROR',
  VALUE_OUT_OF_RANGE: 'VALUE_OUT_OF_RANGE',
  VALUE_TOO_LONG: 'VALUE_TOO_LONG',
  
  // 쿼리 관련
  QUERY_PARSING_ERROR: 'QUERY_PARSING_ERROR',
  QUERY_VALIDATION_ERROR: 'QUERY_VALIDATION_ERROR',
  QUERY_INTERPRETATION_ERROR: 'QUERY_INTERPRETATION_ERROR',
  RAW_QUERY_ERROR: 'RAW_QUERY_ERROR',
  
  // 연결 관련
  CONNECTION_ERROR: 'CONNECTION_ERROR',
  CONNECTION_TIMEOUT: 'CONNECTION_TIMEOUT',
  
  // 스키마 관련
  TABLE_NOT_FOUND: 'TABLE_NOT_FOUND',
  COLUMN_NOT_FOUND: 'COLUMN_NOT_FOUND',
  INCONSISTENT_COLUMN_DATA: 'INCONSISTENT_COLUMN_DATA',
  
  // 트랜잭션 관련
  TRANSACTION_CONFLICT: 'TRANSACTION_CONFLICT',
  TRANSACTION_API_ERROR: 'TRANSACTION_API_ERROR',
  
  // 레코드 관련
  RECORD_NOT_FOUND: 'RECORD_NOT_FOUND',
  
  // 관계 관련
  RELATIONSHIP_VIOLATION: 'RELATIONSHIP_VIOLATION'
} as const;

/**
 * HTTP 상태 코드 관련
 */
export const HTTP_ERROR_CODES = {
  BAD_REQUEST: 'BAD_REQUEST',
  UNAUTHORIZED: 'UNAUTHORIZED',
  FORBIDDEN: 'FORBIDDEN',
  NOT_FOUND: 'NOT_FOUND',
  METHOD_NOT_ALLOWED: 'METHOD_NOT_ALLOWED',
  CONFLICT: 'CONFLICT',
  UNPROCESSABLE_ENTITY: 'UNPROCESSABLE_ENTITY',
  TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS',
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  BAD_GATEWAY: 'BAD_GATEWAY',
  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',
  GATEWAY_TIMEOUT: 'GATEWAY_TIMEOUT'
} as const;

/**
 * 미들웨어 에러 코드
 */
export const MIDDLEWARE_ERROR_CODES = {
  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',
  MIDDLEWARE_FAILED: 'MIDDLEWARE_FAILED',
  AUTHENTICATION_FAILED: 'AUTHENTICATION_FAILED',
  AUTHORIZATION_FAILED: 'AUTHORIZATION_FAILED',
  CORS_ERROR: 'CORS_ERROR',
  FILE_UPLOAD_ERROR: 'FILE_UPLOAD_ERROR',
  FILE_SIZE_EXCEEDED: 'FILE_SIZE_EXCEEDED',
  INVALID_FILE_TYPE: 'INVALID_FILE_TYPE'
} as const;

/**
 * 비즈니스 로직 에러 코드
 */
export const BUSINESS_ERROR_CODES = {
  BUSINESS_RULE_VIOLATION: 'BUSINESS_RULE_VIOLATION',
  WORKFLOW_ERROR: 'WORKFLOW_ERROR',
  STATE_TRANSITION_ERROR: 'STATE_TRANSITION_ERROR',
  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',
  INSUFFICIENT_PRIVILEGES: 'INSUFFICIENT_PRIVILEGES',
  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',
  FEATURE_DISABLED: 'FEATURE_DISABLED'
} as const;

/**
 * 통합 에러 코드 (모든 카테고리 포함)
 */
export const ERROR_CODES = {
  ...JSON_API_ERROR_CODES,
  ...CRUD_ERROR_CODES,
  ...PRISMA_ERROR_CODES,
  ...HTTP_ERROR_CODES,
  ...MIDDLEWARE_ERROR_CODES,
  ...BUSINESS_ERROR_CODES
} as const;

/**
 * 에러 코드 타입 정의
 */
export type ErrorCode = typeof ERROR_CODES[keyof typeof ERROR_CODES];
export type JsonApiErrorCode = typeof JSON_API_ERROR_CODES[keyof typeof JSON_API_ERROR_CODES];
export type CrudErrorCode = typeof CRUD_ERROR_CODES[keyof typeof CRUD_ERROR_CODES];
export type PrismaErrorCode = typeof PRISMA_ERROR_CODES[keyof typeof PRISMA_ERROR_CODES];
export type HttpErrorCode = typeof HTTP_ERROR_CODES[keyof typeof HTTP_ERROR_CODES];
export type MiddlewareErrorCode = typeof MIDDLEWARE_ERROR_CODES[keyof typeof MIDDLEWARE_ERROR_CODES];
export type BusinessErrorCode = typeof BUSINESS_ERROR_CODES[keyof typeof BUSINESS_ERROR_CODES];

/**
 * 에러 코드별 기본 HTTP 상태 코드 매핑
 */
export const ERROR_STATUS_MAP: Record<string, number> = {
  // 400 Bad Request
  [ERROR_CODES.PAGINATION_REQUIRED]: 400,
  [ERROR_CODES.INVALID_PAGINATION_PARAMS]: 400,
  [ERROR_CODES.INVALID_PAGE_SIZE]: 400,
  [ERROR_CODES.VALIDATION_ERROR]: 400,
  [ERROR_CODES.INVALID_REQUEST_FORMAT]: 400,
  [ERROR_CODES.MISSING_REQUIRED_FIELD]: 400,
  [ERROR_CODES.INVALID_FIELD_TYPE]: 400,
  [ERROR_CODES.INVALID_QUERY_PARAMS]: 400,
  [ERROR_CODES.INVALID_FILTER]: 400,
  [ERROR_CODES.INVALID_SORT]: 400,
  [ERROR_CODES.BAD_REQUEST]: 400,
  
  // 401 Unauthorized
  [ERROR_CODES.UNAUTHORIZED]: 401,
  [ERROR_CODES.INVALID_CREDENTIALS]: 401,
  [ERROR_CODES.TOKEN_EXPIRED]: 401,
  [ERROR_CODES.AUTHENTICATION_FAILED]: 401,
  
  // 403 Forbidden
  [ERROR_CODES.FORBIDDEN]: 403,
  [ERROR_CODES.AUTHORIZATION_FAILED]: 403,
  [ERROR_CODES.INSUFFICIENT_PRIVILEGES]: 403,
  [ERROR_CODES.OPERATION_NOT_ALLOWED]: 403,
  
  // 404 Not Found
  [ERROR_CODES.NOT_FOUND]: 404,
  [ERROR_CODES.RESOURCE_NOT_FOUND]: 404,
  [ERROR_CODES.RELATIONSHIP_NOT_FOUND]: 404,
  [ERROR_CODES.RECORD_NOT_FOUND]: 404,
  [ERROR_CODES.TABLE_NOT_FOUND]: 404,
  [ERROR_CODES.COLUMN_NOT_FOUND]: 404,
  
  // 409 Conflict
  [ERROR_CODES.CONFLICT]: 409,
  [ERROR_CODES.RESOURCE_ALREADY_EXISTS]: 409,
  [ERROR_CODES.DUPLICATE_ENTRY]: 409,
  [ERROR_CODES.UNIQUE_CONSTRAINT_VIOLATION]: 409,
  [ERROR_CODES.OPTIMISTIC_LOCK_FAILED]: 409,
  
  // 415 Unsupported Media Type
  [ERROR_CODES.UNSUPPORTED_MEDIA_TYPE]: 415,
  [ERROR_CODES.INVALID_CONTENT_TYPE]: 415,
  
  // 422 Unprocessable Entity
  [ERROR_CODES.UNPROCESSABLE_ENTITY]: 422,
  [ERROR_CODES.BUSINESS_RULE_VIOLATION]: 422,
  [ERROR_CODES.STATE_TRANSITION_ERROR]: 422,
  [ERROR_CODES.RELATIONSHIP_VIOLATION]: 422,
  [ERROR_CODES.DATA_VALIDATION_ERROR]: 422,
  [ERROR_CODES.VALUE_OUT_OF_RANGE]: 422,
  
  // 429 Too Many Requests
  [ERROR_CODES.TOO_MANY_REQUESTS]: 429,
  [ERROR_CODES.RATE_LIMIT_EXCEEDED]: 429,
  [ERROR_CODES.QUOTA_EXCEEDED]: 429,
  
  // 500 Internal Server Error (기본값)
  [ERROR_CODES.INTERNAL_SERVER_ERROR]: 500,
  [ERROR_CODES.INTERNAL_ERROR]: 500,
  [ERROR_CODES.DATABASE_ERROR]: 500,
  [ERROR_CODES.OPERATION_FAILED]: 500
};

/**
 * 에러 코드에 해당하는 HTTP 상태 코드를 반환
 * @param errorCode 에러 코드
 * @returns HTTP 상태 코드 (기본값: 500)
 */
export function getHttpStatusForErrorCode(errorCode: string): number {
  return ERROR_STATUS_MAP[errorCode] || 500;
}

/**
 * 에러 코드별 사용자 친화적 메시지 매핑
 */
export const ERROR_MESSAGES: Record<string, string> = {
  [ERROR_CODES.PAGINATION_REQUIRED]: 'Pagination parameters are required. Please specify page[number] & page[size] or page[cursor] & page[size].',
  [ERROR_CODES.INVALID_PAGINATION_PARAMS]: 'Invalid pagination parameters. Please check your page[number], page[cursor], and page[size] values.',
  [ERROR_CODES.INVALID_PAGE_SIZE]: 'Page size must be a positive number greater than 0.',
  [ERROR_CODES.RESOURCE_NOT_FOUND]: 'The requested resource could not be found.',
  [ERROR_CODES.VALIDATION_ERROR]: 'The request contains invalid data. Please check your input.',
  [ERROR_CODES.UNAUTHORIZED]: 'Authentication is required to access this resource.',
  [ERROR_CODES.FORBIDDEN]: 'You do not have permission to access this resource.',
  [ERROR_CODES.DUPLICATE_ENTRY]: 'A resource with this identifier already exists.',
  [ERROR_CODES.INTERNAL_ERROR]: 'An internal server error occurred. Please try again later.'
};

/**
 * 사용자 친화적 에러 메시지 반환
 * @param errorCode 에러 코드
 * @returns 사용자 친화적 메시지
 */
export function getErrorMessage(errorCode: string): string {
  return ERROR_MESSAGES[errorCode] || 'An unexpected error occurred.';
}
